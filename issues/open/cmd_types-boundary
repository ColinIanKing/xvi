Segfault and unused elements in cmd_types[]

Reported-by: C.J.Wagenius<cjw@tuxxor.net>

There's a problem with the cmd_types-array in cmdtab.c. It's size is set
to 256 (NUM_VI_CMD), but not all indexes are used. Many will be zeroed
out. Boundary checks are also made to NUM_VI_CMD, so handling values >
156 and < 256 will end up in a NULLified index and cause a segmentation
fault. I accidently pressed 'Ã¤' (first byte 195) on my swedish keyboard
and it crashed.

This patch will resolve that.

diff --git a/src/cmd.h b/src/cmd.h
index 1b533f4..d3da86d 100644
--- a/src/cmd.h
+++ b/src/cmd.h
@@ -56,9 +56,9 @@ typedef struct vi_command {
     unsigned char	c_flags;
 } VI_COMMAND;
 
-#define	NUM_VI_CMDS	256
-#define	MAX_CMD		(NUM_VI_CMDS - 1)
+#define	MAX_CMD		(cmd_types_len - 1)
 #define CFLAGS(c)	(((c) > MAX_CMD) ? 0 : cmd_types[c].c_flags)
 #define CFUNC(c)	(((c) > MAX_CMD) ? do_badcmd : cmd_types[c].c_func)
 
-extern	VI_COMMAND	cmd_types[NUM_VI_CMDS];
+extern	VI_COMMAND	cmd_types[];
+extern size_t cmd_types_len;
diff --git a/src/cmdtab.c b/src/cmdtab.c
index 15f8ec0..cdf68ec 100644
--- a/src/cmdtab.c
+++ b/src/cmdtab.c
@@ -22,7 +22,7 @@
 #include "xvi.h"
 #include "cmd.h"
 
-VI_COMMAND	cmd_types[NUM_VI_CMDS] = {
+VI_COMMAND	cmd_types[] = {
  { /* ^@ */	do_badcmd,	0 },
  { /* ^A */	do_badcmd,	0 },
  { /* ^B */	do_page,	0 },
@@ -181,3 +181,5 @@ VI_COMMAND	cmd_types[NUM_VI_CMDS] = {
  { /* K_END */		do_target,	TARGET | TGT_CHAR | TGT_INCLUSIVE },
  { /* K_DELETE */	do_x,		0 },
 };
+
+size_t cmd_types_len = LENOF(cmd_types);
diff --git a/src/xvi.h b/src/xvi.h
index b1989b9..430e782 100644
--- a/src/xvi.h
+++ b/src/xvi.h
@@ -659,6 +659,7 @@ extern volatile int	keystrokes;
  * SECTION 7: MISCELLANEOUS MACROS                             *
  *                                                             *
  ***************************************************************/
+#define LENOF(x) (sizeof(x) / sizeof(*x))
 
 
 /***************************************************************
