#! /bin/sh
# -*- tcl -*-

# If $LANG is a utf8 one, exp_sending \xFF sends \303\277 to xvi
# so we set LANG=C to circumvent that. (Un)setting LANG in TCL doesn't work,
# presumably because tclsh or expect checks $LANG's setting on startup.
# This means you can only run this test file as a shell script, not with tclsh.

# The next line is executed by /bin/sh, but not tcl \
LANG=C exec tclsh "$0" ${1+"$@"}
if { ! [info exists env(LANG)] || $env(LANG) != "C" } {
    send_error "Couldn't set LANG to C".
    fail 99
}

#
# Test file for showing an ^ with the cursor on the ^ when you've pressed ^V
# and it's waiting for the literal character.
#

source term
start_vi

# Tests begin

# Check it started up OK
test 100 ""		1 0 [list "" "~"]

# 1. In INSERT mode

# A literal ^V at the start of the line
test 101 "a[ctrl V]"		1 0 [list "^" "~"]
test 102 [ctrl V]			1 2 [list "^V" "~"]
exp_send [esc]

# In the middle of a line
test 103 "0Daabcd[esc]0ll"	1 2 [list "abcd" "~"]  ;# Cursor on the c
test 104 "i[ctrl V]"		1 2 [list "ab^cd" "~"]
		# Test Ctrl-V + regular character
test 105 "X"			1 3 [list "abXcd" "~"]
exp_send [esc]

# 2. In REPLACE mode

# 2a. Single character
test 106 "0Daabcde[esc]0ll" 1 2 [list "abcde" "~"]	;# Cursor on the c
test 107 "r[ctrl V]"		1 2 [list "ab^de" "~"]
;# Something that should shunt the line up by 1 char
test 108 "[ctrl V]"		1 2 [list "ab^Vde" "~"]

# 2b. Multiple characters
test 109 "0Daabcdefg[esc]0ll"	1 2 [list "abcdefg" "~"]  ;# Cursor on the c
test 110 "RX[ctrl V]"		1 3 [list "abX^efg" "~"]
test 111 "Y"			1 4 [list "abXYefg" "~"]
test 112 "[ctrl V]"		1 4 [list "abXY^fg" "~"]
test 113 "\xFF"			1 8 [list "abXY\\377fg" "~"]
#test 114 "Z[esc]"		1 8 [list "abXY\\377Zg" "~"]
test 114 "Z"		1 9 [list "abXY\\377Zg" "~"]
exp_send [esc]

# 3. On the command line
ctest 115 ":[ctrl V]"		1 ":^"
ctest 116 "[ctrl V]"		3 ":^V"
ctest 117 "[ctrl V]"		3 ":^V^"
ctest 118 "A"			4 ":^VA"
ctest 119 "[ctrl V]"		4 ":^VA^"
ctest 120 "\xFF"		8 ":^VA\\377"
# Need to send left arrow and check that it works in the middle of the line.
ctest 121 "\b\b\b"		1 ":"
ctest 121 "abcd[larrow][larrow][ctrl V]" 3 ":ab^cd"
ctest 122 "[ctrl V]"		5 ":ab^Vcd"

# Check interaction with insert maps. literal characters shouldn't be
# mapped by ":map!" mappings.

exp_send "\b\b\b\b:map! X Y\r"
exp_send "1GdG"
test 123 "iX[ctrl V]X"		1 2 [list "YX"]	 ;# INSERT mode
test 124 "[esc]0Cabc[esc]0"	1 0 [list "abc"] ;# reset test pattern
test 125 "rXlr[ctrl V]X"	1 1 [list "YXc"] ;# 1-char REPLACE mode
test 126 "0Cabc[esc]0"		1 0 [list "abc"] ;# reset test pattern
test 127 "RX[ctrl V]X"		1 2 [list "YXc"] ;# multi-char REPLACE mode
exp_send "[esc]"

# Need to check that inserting the same text again works (i.e. that
# Flexbuf Insbuff is set correctly and regurgitates correctly).

stop_vi

exit 0
